class Date
{
	friend ostream& operator<<(ostream& _cout,const Date& d);
public:
	Date(const int year,const int month,const int day)
		:_year(year),
		_month(month),
		_day(day)
	{
		if(year<=0||(month>12||month<1)||DayofMonth(year,month,day)==0)
		{
			_year=0;
			_month=0;
			_day=0;
		}
		 cout<<"Date():"<<this<<endl;
	}
	Date(const Date& d)
	{
		_year=d._year;
		_month=d._month;
		_day=d._day;
	}

	~Date()
	{
		cout<<"~Data():"<<this<<endl;
	}

	Date& operator=(const Date& d)
	{
		_year=d._year;
		_month=d._month;
		_day=d._day;
		return *this;
	}
	Date operator+(const int num)
	{
		Date tmp(*this);
		int flag=0;
		tmp._day+=num;
		while(!flag)
		{
			
			switch(tmp._month)
		   {
			case 1:
		    case 3:
			case 5:
			case 7:
			case 8:
			case 10:{
				
				if(tmp._day<=31)
				{
					flag=1;
				}
				else
				{
					tmp._day-=31;
					tmp._month++;
				}
	
					}break;

			case 4:
			case 6:
			case 9:
			case 11:{
				if(tmp._day<=30)
				{
					flag=1;
				}
				else
				{
					tmp._day-=30;
					tmp._month++;
				}
					}break;

			case 2:{
				if((tmp._year%4==0&&tmp._year%100!=0)||tmp._year%400==0)
				{
					if(tmp._day<=29)
					{
						flag=1;
					}
					else
					{
						tmp._day-=29;
						tmp._month++;
					}
				}
				else
				{
					if(tmp._day<=28)
					{
						flag=1;
					}
					else
					{
						tmp._day-=28;
						tmp._month++;
					}
				}
				   }break;

			case 12:{
				if(tmp._day<=31)
				{
					flag=1;
				}
				else
				{
					tmp._day-=31;
					tmp._month=1;
					tmp._year++;
				}
					}break;
			default:break;
			}
		}
		return tmp;

	}

	size_t operator-(const Date& d)
	{
		Date tmp(*this);
		size_t i=_day;
		while(tmp._month!=d._month||tmp._year!=d._year)
		{
			if(tmp._month==1)
			{
				tmp._month=12;
				tmp._year--;
			}
			else
			{
				tmp._month--;
			}
			if(tmp._month==2)
			{
				if((tmp._year%4==0&&tmp._year%100!=0)||tmp._year%400==0)
				{
					i+=29;
				}
				else
				{
					i+=28;
				}
			}
			else if(tmp._month==4||tmp._month==6||tmp._month==9||tmp._month==11)
			{
				i+=30;
			}
			else
			{
				i+=31;
			}
		}
		return (i-d._day);

	}

	Date& operator++()
	{
		_day++;
		if(_month==2)
		{
			if((_year%4==0&&_year%100!=0)||_year%400==0)
			{
				if(_day==30)
				{
					_month++;
					_day=1;
				}
			}
			else
			{
				if(_day==29)
				{
					_month++;
					_day=1;
				}
			}
		}
		else if(_month==4||_month==6||_month==9||_month==11)
		{
			if(_day==31)
			{
				_month++;
				_day=1;
			}
		}
		else
		{
			if(_day==32)
			{
				_month++;
				_day=1;
				if(_month==13)
				{
					_year++;
					_month=1;
				}
			}
		}
		return *this;
	}
	Date operator++(int)
	{
		Date tmp(*this);
		_day++;
		if(_month==2)
		{
			if((_year%4==0&&_year%100!=0)||_year%400==0)
			{
				if(_day==30)
				{
					_month++;
					_day=1;
				}
			}
			else
			{
				if(_day==29)
				{
					_month++;
					_day=1;
				}
			}
		}
		else if(_month==4||_month==6||_month==9||_month==11)
		{
			if(_day==31)
			{
				_month++;
				_day=1;
			}
		}
		else
		{
			if(_day==32)
			{
				_month++;
				_day=1;
				if(_month==13)
				{
					_year++;
					_month=1;
				}
			}
		}
		return tmp;
	}

	

private:
	int _year;
	int _month;
	int _day;
	int DayofMonth(int year,int month,int day);
};

ostream& operator<<(ostream& _cout,const Date& d)
{
	return _cout<<d._year<<"-"<<d._month<<"-"<<d._day;
}

int Date::DayofMonth(int year,int month,int day)
{
	if(month==4||month==6||month==9||month==11)
	{
		if(day>=1&&day<=30)
			return 1;
		else
			return 0;
	}
	else if(month==2)
	{
		if((year%4==0&&year%100!=0)||year%400==0)
		{
			if(day>=1&&day<=29)
				return 1;
			else
				return 0;
		}
		else
		{
			if(day>=1&&day<=28)
				return 1;
			else
				return 0;
		}
	}
	else
	{
		if(day>=1&&day<=31)
				return 1;
			else
				return 0;
	}
}